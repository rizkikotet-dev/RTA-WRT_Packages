name: 🔄 Sync KWRT Packages

on:
  # 🕐 Jalankan setiap hari pada jam 02:00 UTC
  schedule:
    - cron: '0 2 * * *'
  
  # 🚀 Manual trigger
  workflow_dispatch:
    inputs:
      force_sync:
        description: '🔧 Force sync even if no changes'
        required: false
        default: false
        type: boolean

env:
  KWRT_REPO_URL: https://github.com/kiddin9/kwrt-packages
  PACKAGES_DIR: packages

jobs:
  sync-packages:
    name: 📦 Sync KWRT Packages
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: 🏗️ Setup Environment
      run: |
        echo "🔧 Setting up sync environment..."
        echo "SOURCE_URL=${{ env.KWRT_REPO_URL }}" >> $GITHUB_ENV
        echo "SYNC_DATE=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
    
    - name: 📁 Prepare Packages Directory
      run: |
        echo "📁 Creating packages directory structure..."
        mkdir -p ${{ env.PACKAGES_DIR }}
        
        # 💾 Backup .gitkeep if exists
        if [ -f ${{ env.PACKAGES_DIR }}/.gitkeep ]; then
          echo "💾 Backing up .gitkeep file..."
          cp ${{ env.PACKAGES_DIR }}/.gitkeep /tmp/.gitkeep.backup
        fi
    
    - name: ⬇️ Download KWRT Packages
      run: |
        echo "⬇️ Downloading latest KWRT packages..."
        echo "📡 Source: ${{ env.KWRT_REPO_URL }}"
        
        wget -q --show-progress --progress=bar:force \
          -O kwrt-packages.zip \
          ${{ env.KWRT_REPO_URL }}/archive/refs/heads/main.zip
        
        echo "✅ Download completed successfully!"
        ls -lah kwrt-packages.zip
    
    - name: 📦 Extract and Process Files
      run: |
        echo "📦 Extracting downloaded archive..."
        unzip -q kwrt-packages.zip
        
        echo "🧹 Cleaning existing packages directory..."
        rm -rf ${{ env.PACKAGES_DIR }}/*
        
        # 💾 Restore .gitkeep if it existed
        if [ -f /tmp/.gitkeep.backup ]; then
          echo "💾 Restoring .gitkeep file..."
          mv /tmp/.gitkeep.backup ${{ env.PACKAGES_DIR }}/.gitkeep
        fi
        
        echo "📋 Processing and moving files..."
        cd kwrt-packages-main
        
        # 📊 Count files before moving
        TOTAL_FILES=$(find . -maxdepth 1 -type f -not -name 'README.md' | wc -l)
        TOTAL_DIRS=$(find . -maxdepth 1 -type d -not -name '.' -not -name '.github' | wc -l)
        
        echo "📊 Files to sync: $TOTAL_FILES files, $TOTAL_DIRS directories"
        
        # 🚚 Move files (exclude README.md and .github)
        find . -maxdepth 1 -type f -not -name 'README.md' -exec mv {} ../${{ env.PACKAGES_DIR }}/ \;
        find . -maxdepth 1 -type d -not -name '.' -not -name '.github' -exec mv {} ../${{ env.PACKAGES_DIR }}/ \;
        
        cd ..
        
        echo "🧹 Cleaning up temporary files..."
        rm -rf kwrt-packages.zip kwrt-packages-main
        
        echo "✅ File processing completed!"
    
    - name: 🔍 Analyze Changes
      id: analyze_changes
      run: |
        echo "🔍 Analyzing changes in repository..."
        
        # Check for changes
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "📝 Changes detected in packages directory"
          
          # Count changes
          ADDED=$(git status --porcelain | grep "^A" | wc -l)
          MODIFIED=$(git status --porcelain | grep "^M" | wc -l)
          DELETED=$(git status --porcelain | grep "^D" | wc -l)
          UNTRACKED=$(git status --porcelain | grep "^??" | wc -l)
          
          echo "added=$ADDED" >> $GITHUB_OUTPUT
          echo "modified=$MODIFIED" >> $GITHUB_OUTPUT
          echo "deleted=$DELETED" >> $GITHUB_OUTPUT
          echo "untracked=$UNTRACKED" >> $GITHUB_OUTPUT
          
          echo "📊 Change summary:"
          echo "  ➕ Added: $ADDED files"
          echo "  ✏️ Modified: $MODIFIED files"
          echo "  ❌ Deleted: $DELETED files"
          echo "  📄 Untracked: $UNTRACKED files"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes detected"
        fi
    
    - name: 💾 Commit and Push Changes
      if: steps.analyze_changes.outputs.changes == 'true' || github.event.inputs.force_sync == 'true'
      run: |
        echo "💾 Committing changes to repository..."
        
        git config --global user.email "action@github.com"
        git config --global user.name "🤖 KWRT Sync Bot"
        
        # Create detailed commit message
        COMMIT_MSG="🔄 Auto-sync: Update KWRT packages

        📅 Sync Date: ${{ env.SYNC_DATE }}
        📡 Source: ${{ env.KWRT_REPO_URL }}
        🔗 Commit Hash: ${{ env.COMMIT_HASH }}
        
        📊 Changes Summary:
        ➕ Added: ${{ steps.analyze_changes.outputs.added || 0 }} files
        ✏️ Modified: ${{ steps.analyze_changes.outputs.modified || 0 }} files
        ❌ Deleted: ${{ steps.analyze_changes.outputs.deleted || 0 }} files
        📄 New: ${{ steps.analyze_changes.outputs.untracked || 0 }} files"
        
        git add ${{ env.PACKAGES_DIR }}/
        git commit -m "$COMMIT_MSG"
        git push
        
        echo "✅ Changes committed and pushed successfully!"
    
    - name: 📋 Generate Summary Report
      run: |
        echo "📋 Generating sync summary report..."
        
        echo "# 🔄 KWRT Packages Sync Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Sync Information" >> $GITHUB_STEP_SUMMARY
        echo "| Item | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| 📅 **Sync Date** | \`${{ env.SYNC_DATE }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| 📡 **Source Repository** | [${{ env.KWRT_REPO_URL }}](${{ env.KWRT_REPO_URL }}) |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔗 **Workflow Run** | [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ steps.analyze_changes.outputs.changes }}" == "true" ]]; then
          echo "## ✅ Sync Status: SUCCESS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Changes Detected and Applied" >> $GITHUB_STEP_SUMMARY
          echo "| Change Type | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| ➕ **Added** | \`${{ steps.analyze_changes.outputs.added || 0 }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| ✏️ **Modified** | \`${{ steps.analyze_changes.outputs.modified || 0 }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| ❌ **Deleted** | \`${{ steps.analyze_changes.outputs.deleted || 0 }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| 📄 **New Files** | \`${{ steps.analyze_changes.outputs.untracked || 0 }}\` |" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ github.event.inputs.force_sync }}" == "true" ]]; then
          echo "## 🔧 Sync Status: FORCED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Force sync was triggered manually**" >> $GITHUB_STEP_SUMMARY
        else
          echo "## ℹ️ Sync Status: NO CHANGES" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ **Repository is already up to date**" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "*🤖 Automated sync powered by GitHub Actions*" >> $GITHUB_STEP_SUMMARY
    
    - name: 🎉 Sync Completion
      run: |
        echo "🎉 KWRT Packages sync workflow completed successfully!"
        echo "📊 Summary:"
        echo "  📅 Date: ${{ env.SYNC_DATE }}"
        echo "  📡 Source: ${{ env.KWRT_REPO_URL }}"
        echo "  🔄 Status: $([ "${{ steps.analyze_changes.outputs.changes }}" == "true" ] && echo "✅ Updated" || echo "ℹ️ No changes")"