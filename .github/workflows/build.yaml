name: Build OpenWrt Packages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'packages/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'packages/**'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - "23.05.5"
          - "24.10.1"
          - "snapshot"
        arch:
          - "aarch64_cortex-a53"
          - "aarch64_cortex-a72"
          - "aarch64_generic"
          - "arc_arc700"
          - "arc_archs"
          - "arm_arm1176jzf-s_vfp"
          - "arm_arm926ej-s"
          - "arm_cortex-a15_neon-vfpv4"
          - "arm_cortex-a5_vfpv4"
          - "arm_cortex-a7"
          - "arm_cortex-a7_neon-vfpv4"
          - "arm_cortex-a8_vfpv3"
          - "arm_cortex-a9"
          - "arm_cortex-a9_neon"
          - "arm_cortex-a9_vfpv3-d16"
          - "arm_fa526"
          - "arm_mpcore"
          - "arm_xscale"
          - "i386_pentium-mmx"
          - "i386_pentium4"
          - "mips_24kc"
          - "mips_4kec"
          - "mips_mips32"
          - "mipsel_24kc"
          - "mipsel_24kc_24kf"
          - "mipsel_74kc"
          - "mipsel_mips32"
          - "powerpc_464fp"
          - "powerpc_8540"
          - "x86_64"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build packages
        uses: openwrt/gh-action-sdk@v7
        env:
          ARCH: ${{ matrix.arch }}
          FEEDNAME: packages_custom
          PACKAGES: packages
          V: s
        with:
          release: ${{ matrix.release }}

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.release }}-${{ matrix.arch }}
          path: bin/packages/${{ matrix.arch }}/packages_custom/*.ipk

      - name: Store logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs-${{ matrix.release }}-${{ matrix.arch }}
          path: logs/

  deploy:
    name: Deploy to releases branch
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    strategy:
      matrix:
        release:
          - "23.05.5"
          - "24.10.1"
          - "snapshot"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: packages-${{ matrix.release }}-*
          path: downloads/

      - name: Organize packages
        run: |
          mkdir -p releases/${{ matrix.release }}
          cd downloads
          for dir in packages-${{ matrix.release }}-*/; do
            if [ -d "$dir" ]; then
              arch=$(echo "$dir" | sed 's/packages-${{ matrix.release }}-\(.*\)\//\1/')
              mkdir -p "../releases/${{ matrix.release }}/$arch"
              if [ -n "$(find "$dir" -name "*.ipk" 2>/dev/null)" ]; then
                cp "$dir"/*.ipk "../releases/${{ matrix.release }}/$arch/" 2>/dev/null || true
              fi
            fi
          done

      - name: Generate package index
        run: |
          cd releases/${{ matrix.release }}
          for arch_dir in */; do
            if [ -d "$arch_dir" ] && [ -n "$(find "$arch_dir" -name "*.ipk" 2>/dev/null)" ]; then
              arch=$(basename "$arch_dir")
              echo "Generating index for $arch"
              cd "$arch_dir"
              
              # Create Packages file
              for ipk in *.ipk; do
                if [ -f "$ipk" ]; then
                  echo "Package: $(basename "$ipk" .ipk)"
                  echo "Version: $(date +%Y%m%d)"
                  echo "Architecture: $arch"
                  echo "Filename: $ipk"
                  echo "Size: $(stat -c%s "$ipk")"
                  echo "SHA256sum: $(sha256sum "$ipk" | cut -d' ' -f1)"
                  echo ""
                fi
              done > Packages
              
              # Compress Packages file
              gzip -k Packages
              
              cd ..
            fi
          done

      - name: Create release info
        run: |
          cd releases/${{ matrix.release }}
          cat > README.md << EOF
          # OpenWrt Packages - ${{ matrix.release }}
          
          Built on: $(date)
          Commit: ${{ github.sha }}
          
          ## Available Architectures
          
          EOF
          
          for arch_dir in */; do
            if [ -d "$arch_dir" ] && [ -n "$(find "$arch_dir" -name "*.ipk" 2>/dev/null)" ]; then
              arch=$(basename "$arch_dir")
              count=$(find "$arch_dir" -name "*.ipk" | wc -l)
              echo "- $arch ($count packages)" >> README.md
            fi
          done

      - name: Deploy to releases branch
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # Create or switch to releases branch
          git fetch origin releases:releases 2>/dev/null || true
          
          if git show-ref --verify --quiet refs/heads/releases; then
            echo "Switching to existing releases branch"
            git checkout releases
          else
            echo "Creating new releases branch"
            git checkout --orphan releases
            git rm -rf . 2>/dev/null || true
            echo "# OpenWrt Packages Repository" > README.md
            echo "" >> README.md
            echo "This branch contains built OpenWrt packages." >> README.md
            git add README.md
            git commit -m "Initial commit for releases branch"
            git push origin releases
          fi
          
          # Create directory structure for this release
          mkdir -p ${{ matrix.release }}
          
          # Copy release files to the specific release directory
          if [ -d "releases/${{ matrix.release }}" ]; then
            cp -r releases/${{ matrix.release }}/* ${{ matrix.release }}/ 2>/dev/null || true
          fi
          
          # Add and commit changes
          git add ${{ matrix.release }}/
          if git diff --staged --quiet; then
            echo "No changes to commit for ${{ matrix.release }}"
          else
            git commit -m "Update packages for ${{ matrix.release }} - $(date)"
            git push origin releases
          fi